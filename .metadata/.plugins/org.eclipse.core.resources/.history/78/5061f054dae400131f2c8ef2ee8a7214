import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.image.*;
import java.util.Vector;

import javax.swing.*;
import javax.swing.text.StyledEditorKit.BoldAction;

class myFrame extends JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Robot robot;
	int W = 100, H = 100;
	static JPanel panel = new JPanel();
	static Container pane;
	// now;
	static DefaultListModel<String> listModel = new DefaultListModel<String>();
	static JList<String> list;
	static JPanel btnPanel = new JPanel();
	static JPanel txt = new JPanel();
	static String x = "", y = "";

	JPanel getText(int x, int y) {
		JPanel jp = new JPanel();
		jp.add(new JTextField(String.valueOf(x)),
				new JTextField(String.valueOf(y)));
		return jp;
	}

	String getCor() {

		String s = String.valueOf(MouseInfo.getPointerInfo().getLocation().x);
		s += " " + String.valueOf(MouseInfo.getPointerInfo().getLocation().y);
		return s;

	}

	public myFrame() {
		setTitle("Irobot v0.9");

		list = new JList<String>(listModel);
		panel.setLayout(new BorderLayout(5, 5));
		panel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
		list.setSelectedIndex(0);
		list.setFocusable(false);
		panel.add(new JScrollPane(list), BorderLayout.CENTER);

		btnPanel.setLayout(new GridLayout(1, 2, 5, 0));
		panel.add(btnPanel, BorderLayout.NORTH);
		// pane = getContentPane();

		GraphicsEnvironment env = GraphicsEnvironment
				.getLocalGraphicsEnvironment();
		GraphicsDevice screen = env.getDefaultScreenDevice();
		try {
			robot = new Robot(screen);
		} catch (AWTException ex) {
		}

		Dimension bts = new Dimension(30, 10);
		JButton bt1 = new JButton("Screen");
		final JButton bt2 = new JButton("+");
		final JButton bt3 = new JButton("-");
		bt1.setSize(bts);
		bt2.setSize(bts);
		bt3.setSize(bts);

		bt1.setFocusable(false);
		// pane.add(bt1);

		final Dimension screenSize = Toolkit.getDefaultToolkit()
				.getScreenSize();

		bt1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				BufferedImage image = robot.createScreenCapture(new Rectangle(
						0, 0, screenSize.width, screenSize.height));
				final ImageFrame frame = new ImageFrame(image, listModel);
				frame.show();
				btnPanel.removeAll();
				btnPanel.add(bt2);
				btnPanel.add(bt3);
				pack();
				
				bt2.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						String elem = frame.element;
						String st[] = elem.split(" ");
						frame.pa(Integer.valueOf(st[1]), Integer.valueOf(st[2]), W, H);
						listModel.addElement(elem);
						list.setSelectedIndex(listModel.size() - 1);
						list.ensureIndexIsVisible(listModel.size() - 1);
					}
				});
				bt3.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent arg0) {
						listModel.remove(list.getSelectedIndex());
					}
				});

			}
		});
		btnPanel.add(bt1);

		getContentPane().add(panel);
		setPreferredSize(new Dimension(200, 120));
		pack();
		setLocationRelativeTo(null);
		setVisible(true);
	}

}

class ImageFrame extends JFrame {
	public static String element = "you not clicked";
	static Graphics gr;
	ImageIcon image;
	public void pa(int x, int y, int W, int H) {
		gr.drawRect (x, y, W, H);
		Container pane = getContentPane();
		JLabel label = new JLabel(new ImageIcon(image));
		pane.add(label);
		pack();
	}

	public ImageFrame(Image image, final DefaultListModel listModel) {
		gr =image.getGraphics();
		setTitle("ScanApp-ScreenMod");
		Container pane = getContentPane();
		JLabel label = new JLabel(image);
		pane.add(label);
		pack();

		addMouseListener(new MouseListener() {

			@Override
			public void mouseClicked(MouseEvent e) {
				String x = String.valueOf(e.getX());
				String y = String.valueOf(e.getY());
				element = x + " " + y;
				System.out.println("click!" + element);
			}

			@Override
			public void mouseEntered(MouseEvent arg0) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseExited(MouseEvent arg0) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mousePressed(MouseEvent arg0) {
				// TODO Auto-generated method stub

			}

			@Override
			public void mouseReleased(MouseEvent arg0) {
				// TODO Auto-generated method stub

			}
		});
	}
}

public class MyRobot {
	public static void main(String[] args) {

		myFrame frame = new myFrame();
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.show();

		/*
		 * javax.swing.SwingUtilities.invokeLater(new Runnable() { public void
		 * run() { try { form = new Form(); form.CreateAndShowGUI();
		 * 
		 * } catch (Exception e) { e.printStackTrace(); } } });
		 */}
}
